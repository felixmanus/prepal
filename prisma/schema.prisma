generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(cuid())
  email     String  @unique
  username  String  @unique
  firstName String
  lastName  String
  verified  Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  topics Topic[]
  password Password?
  session Session[]

  @@unique([email, username], name: "email_username")
}

model Password {
  hash String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Topic {
  id        String     @id @default(cuid())
  title String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  parent    Topic?   @relation("ChildTopics", fields: [parentId], references: [id])
  parentId  String?
  topics Topic[] @relation("ChildTopics")

  articles Article[]
  author    User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId  String
}

model Article {
  id        String     @id @default(cuid())
  title     String
  content   String
  topic    Topic    @relation(fields: [topicId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  topicId  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([topicId])
}

model Session {
  id             String   @id @default(cuid())
  expirationDate DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique

  @@index([userId])
}

model Verification {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  /// The type of verification, e.g. "email" or "phone"
  type String

  /// The thing we're trying to verify, e.g. a user's email or phone number
  target String

  /// The secret key used to generate the otp
  secret String

  /// The algorithm used to generate the otp
  algorithm String

  /// The number of digits in the otp
  digits Int

  /// The number of seconds the otp is valid for
  period Int

  /// The valid characters for the otp
  charSet String

  /// When it's safe to delete this verification
  expiresAt DateTime?

  @@unique(fields: [target, type], name: "target_type")
}
